// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using Coherence.Toolkit;
    using Coherence.Toolkit.Bindings;
    using Coherence.Entities;
    using Coherence.ProtocolDef;
    using Coherence.Brook;
    using Coherence.Toolkit.Bindings.ValueBindings;
    using Coherence.Toolkit.Bindings.TransformBindings;
    using Coherence.Connection;
    using Coherence.SimulationFrame;
    using Coherence.Interpolation;
    using Coherence.Log;
    using Logger = Coherence.Log.Logger;
    using UnityEngine.Scripting;
    [UnityEngine.Scripting.Preserve]
    public class Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_a89098f4c6f94b9e85edd670c26aa231 : PositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldPosition);
        public override string CoherenceComponentName => "WorldPosition";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherencePosition); }
            set { coherenceSync.coherencePosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldPosition)coherenceComponent).value;
            if (!coherenceSync.HasParentWithCoherenceSync) { value += floatingOriginDelta; }

            var simFrame = ((WorldPosition)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldPosition)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldPosition();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_b04b198defa54ababf789b41b6cbfe04 : RotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldOrientation);
        public override string CoherenceComponentName => "WorldOrientation";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(coherenceSync.coherenceRotation); }
            set { coherenceSync.coherenceRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldOrientation)coherenceComponent).value;

            var simFrame = ((WorldOrientation)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldOrientation)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldOrientation();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_4a040891aadd4147958e79a56eb8e0a5 : ScaleBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(GenericScale);
        public override string CoherenceComponentName => "GenericScale";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherenceLocalScale); }
            set { coherenceSync.coherenceLocalScale = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((GenericScale)coherenceComponent).value;

            var simFrame = ((GenericScale)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (GenericScale)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new GenericScale();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_0de553e5d60148488fb631e40a17fb42 : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432);
        public override string CoherenceComponentName => "_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Forward_32_Input;

            var simFrame = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Forward_32_InputSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Forward_32_Input = Value;
            }
            else
            {
                update.Forward_32_Input = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.Forward_32_InputSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_03ab5877e983420489148063201f107f : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432);
        public override string CoherenceComponentName => "_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Horizontal_32_Input;

            var simFrame = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Horizontal_32_InputSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Horizontal_32_Input = Value;
            }
            else
            {
                update.Horizontal_32_Input = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.Horizontal_32_InputSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_12b7c337dacd4611b9602974f8ad2d82 : IntAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432);
        public override string CoherenceComponentName => "_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432";
        public override uint FieldMask => 0b00000000000000000000000000000100;

        public override System.Int32 Value
        {
            get { return (System.Int32)(CastedUnityComponent.GetInteger(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetInteger(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Int32 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Int_32_Value;

            var simFrame = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Int_32_ValueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Int_32_Value = Value;
            }
            else
            {
                update.Int_32_Value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.Int_32_ValueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_19c7ee346ea941f981ae914e723a8efb : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432);
        public override string CoherenceComponentName => "_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432";
        public override uint FieldMask => 0b00000000000000000000000000001000;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Yaw_32_Input;

            var simFrame = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Yaw_32_InputSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Yaw_32_Input = Value;
            }
            else
            {
                update.Yaw_32_Input = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.Yaw_32_InputSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_31419fe4c435410fb75cf2d6355b2179 : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432);
        public override string CoherenceComponentName => "_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432";
        public override uint FieldMask => 0b00000000000000000000000000010000;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Float_32_Value;

            var simFrame = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Float_32_ValueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Float_32_Value = Value;
            }
            else
            {
                update.Float_32_Value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.Float_32_ValueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_dbe3192361414ab88c0a721052228b38 : BoolAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432);
        public override string CoherenceComponentName => "_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432";
        public override uint FieldMask => 0b00000000000000000000000000100000;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.GetBool(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetBool(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Bool_32_Value;

            var simFrame = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Bool_32_ValueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Bool_32_Value = Value;
            }
            else
            {
                update.Bool_32_Value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.Bool_32_ValueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_a076afc77da947a4828f0b3856a84b3b : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432);
        public override string CoherenceComponentName => "_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432";
        public override uint FieldMask => 0b00000000000000000000000001000000;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Force;

            var simFrame = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).ForceSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Force = Value;
            }
            else
            {
                update.Force = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.ForceSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_f729564362c645168d7aca2494ccfc00 : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432);
        public override string CoherenceComponentName => "_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432";
        public override uint FieldMask => 0b00000000000000000000000010000000;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Leg;

            var simFrame = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).LegSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Leg = Value;
            }
            else
            {
                update.Leg = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.LegSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_e807ff50c7a74ab197a10a90585f9794 : IntAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432);
        public override string CoherenceComponentName => "_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432";
        public override uint FieldMask => 0b00000000000000000000000100000000;

        public override System.Int32 Value
        {
            get { return (System.Int32)(CastedUnityComponent.GetInteger(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetInteger(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Int32 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Item_32_ID;

            var simFrame = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Item_32_IDSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Item_32_ID = Value;
            }
            else
            {
                update.Item_32_ID = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.Item_32_IDSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7893786974a041d6beae3aac7545c9c9 : BoolAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432);
        public override string CoherenceComponentName => "_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432";
        public override uint FieldMask => 0b00000000000000000000001000000000;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.GetBool(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetBool(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Moving;

            var simFrame = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).MovingSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Moving = Value;
            }
            else
            {
                update.Moving = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.MovingSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_f2d6475a350846429f4e451e9241af39 : BoolAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432);
        public override string CoherenceComponentName => "_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432";
        public override uint FieldMask => 0b00000000000000000000010000000000;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.GetBool(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetBool(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Item_32_Use;

            var simFrame = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Item_32_UseSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Item_32_Use = Value;
            }
            else
            {
                update.Item_32_Use = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.Item_32_UseSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_73665b589c53429183ca3911fd029bf5 : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432);
        public override string CoherenceComponentName => "_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432";
        public override uint FieldMask => 0b00000000000000000000100000000000;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Speed_32_Multiplier;

            var simFrame = ((_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent).Speed_32_MultiplierSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Speed_32_Multiplier = Value;
            }
            else
            {
                update.Speed_32_Multiplier = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.Speed_32_MultiplierSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7418888528324317432();
        }    
    }

    [UnityEngine.Scripting.Preserve]
    public class CoherenceSync_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3 : CoherenceSyncBaked
    {
        private Entity entityId;
        private Logger logger = Coherence.Log.Log.GetLogger<CoherenceSync_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3>();
        
        
        
        private IClient client;
        private CoherenceBridge bridge;
        
        private readonly Dictionary<string, Binding> bakedValueBindings = new Dictionary<string, Binding>()
        {
			["a89098f4c6f94b9e85edd670c26aa231"] = new Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_a89098f4c6f94b9e85edd670c26aa231(),
			["b04b198defa54ababf789b41b6cbfe04"] = new Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_b04b198defa54ababf789b41b6cbfe04(),
			["4a040891aadd4147958e79a56eb8e0a5"] = new Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_4a040891aadd4147958e79a56eb8e0a5(),
			["0de553e5d60148488fb631e40a17fb42"] = new Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_0de553e5d60148488fb631e40a17fb42(),
			["03ab5877e983420489148063201f107f"] = new Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_03ab5877e983420489148063201f107f(),
			["12b7c337dacd4611b9602974f8ad2d82"] = new Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_12b7c337dacd4611b9602974f8ad2d82(),
			["19c7ee346ea941f981ae914e723a8efb"] = new Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_19c7ee346ea941f981ae914e723a8efb(),
			["31419fe4c435410fb75cf2d6355b2179"] = new Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_31419fe4c435410fb75cf2d6355b2179(),
			["dbe3192361414ab88c0a721052228b38"] = new Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_dbe3192361414ab88c0a721052228b38(),
			["a076afc77da947a4828f0b3856a84b3b"] = new Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_a076afc77da947a4828f0b3856a84b3b(),
			["f729564362c645168d7aca2494ccfc00"] = new Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_f729564362c645168d7aca2494ccfc00(),
			["e807ff50c7a74ab197a10a90585f9794"] = new Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_e807ff50c7a74ab197a10a90585f9794(),
			["7893786974a041d6beae3aac7545c9c9"] = new Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_7893786974a041d6beae3aac7545c9c9(),
			["f2d6475a350846429f4e451e9241af39"] = new Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_f2d6475a350846429f4e451e9241af39(),
			["73665b589c53429183ca3911fd029bf5"] = new Binding_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3_73665b589c53429183ca3911fd029bf5(),
        };
        
        private Dictionary<string, Action<CommandBinding, CommandsHandler>> bakedCommandBindings = new Dictionary<string, Action<CommandBinding, CommandsHandler>>();
        
        public CoherenceSync_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3()
        {
        }
        
        public override Binding BakeValueBinding(Binding valueBinding)
        {
            if (bakedValueBindings.TryGetValue(valueBinding.guid, out var bakedBinding))
            {
                valueBinding.CloneTo(bakedBinding);
                return bakedBinding;
            }
            
            return null;
        }
        
        public override void BakeCommandBinding(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            if (bakedCommandBindings.TryGetValue(commandBinding.guid, out var commandBindingBaker))
            {
                commandBindingBaker.Invoke(commandBinding, commandsHandler);
            }
        }
        
        public override void ReceiveCommand(IEntityCommand command)
        {
            switch (command)
            {
                default:
                    logger.Warning(Coherence.Log.Warning.ToolkitBakedSyncReceiveCommandUnhandled,
                        $"CoherenceSync_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3 Unhandled command: {command.GetType()}.");
                    break;
            }
        }
        
        public override void CreateEntity(bool usesLodsAtRuntime, string archetypeName, AbsoluteSimulationFrame simFrame, List<ICoherenceComponentData> components)
        {

            if (!usesLodsAtRuntime)
            {
                return;
            }
            
            if (Archetypes.IndexForName.TryGetValue(archetypeName, out int archetypeIndex))
            {
                components.Add(new ArchetypeComponent
                    {
                        index = archetypeIndex,
                        indexSimulationFrame = simFrame,
                        FieldsMask = 0b1
                    }
                );

                return;                
            }
    
            logger.Warning(Coherence.Log.Warning.ToolkitBakedSyncCreateEntityMissingArchetype,
                $"Unable to find archetype {archetypeName} in dictionary. Please, bake manually (coherence > Bake)");
        }
        
        public override void Dispose()
        {
        }
        
        public override void Initialize(Entity entityId, CoherenceBridge bridge, IClient client, CoherenceInput input, Logger logger)
        {
            this.logger = logger.With<CoherenceSync_0aa3dc2dd97e8ac48a8f1a5d99bf2cc3>();
            this.bridge = bridge;
            this.entityId = entityId;
            this.client = client;        
        }
    }
}
