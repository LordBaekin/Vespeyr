// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using Coherence.Toolkit;
    using Coherence.Toolkit.Bindings;
    using Coherence.Entities;
    using Coherence.ProtocolDef;
    using Coherence.Brook;
    using Coherence.Toolkit.Bindings.ValueBindings;
    using Coherence.Toolkit.Bindings.TransformBindings;
    using Coherence.Connection;
    using Coherence.SimulationFrame;
    using Coherence.Interpolation;
    using Coherence.Log;
    using Logger = Coherence.Log.Logger;
    using UnityEngine.Scripting;
    [UnityEngine.Scripting.Preserve]
    public class Binding_bb0f0a9322c5911438bb794513b1730c_9049011257ea420fa596e3a4dc5c42ab : PositionBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldPosition);
        public override string CoherenceComponentName => "WorldPosition";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherencePosition); }
            set { coherenceSync.coherencePosition = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldPosition)coherenceComponent).value;
            if (!coherenceSync.HasParentWithCoherenceSync) { value += floatingOriginDelta; }

            var simFrame = ((WorldPosition)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldPosition)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldPosition();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_bb0f0a9322c5911438bb794513b1730c_e2143d6c3c06415fb0520c21e6e4be49 : RotationBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(WorldOrientation);
        public override string CoherenceComponentName => "WorldOrientation";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Quaternion Value
        {
            get { return (UnityEngine.Quaternion)(coherenceSync.coherenceRotation); }
            set { coherenceSync.coherenceRotation = (UnityEngine.Quaternion)(value); }
        }

        protected override (UnityEngine.Quaternion value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((WorldOrientation)coherenceComponent).value;

            var simFrame = ((WorldOrientation)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (WorldOrientation)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new WorldOrientation();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_bb0f0a9322c5911438bb794513b1730c_4e514bd9005c473487059372b23c7e12 : ScaleBinding
    {   
        private global::UnityEngine.Transform CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Transform)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(GenericScale);
        public override string CoherenceComponentName => "GenericScale";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override UnityEngine.Vector3 Value
        {
            get { return (UnityEngine.Vector3)(coherenceSync.coherenceLocalScale); }
            set { coherenceSync.coherenceLocalScale = (UnityEngine.Vector3)(value); }
        }

        protected override (UnityEngine.Vector3 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((GenericScale)coherenceComponent).value;

            var simFrame = ((GenericScale)coherenceComponent).valueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (GenericScale)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.value = Value;
            }
            else
            {
                update.value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.valueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new GenericScale();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_bb0f0a9322c5911438bb794513b1730c_995efbc669664abc97e5b763c203a807 : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_bb0f0a9322c5911438bb794513b1730c_7055187111608814719);
        public override string CoherenceComponentName => "_bb0f0a9322c5911438bb794513b1730c_7055187111608814719";
        public override uint FieldMask => 0b00000000000000000000000000000001;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Forward_32_Input;

            var simFrame = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Forward_32_InputSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Forward_32_Input = Value;
            }
            else
            {
                update.Forward_32_Input = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.Forward_32_InputSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _bb0f0a9322c5911438bb794513b1730c_7055187111608814719();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_bb0f0a9322c5911438bb794513b1730c_0971e12432ec40d9b41b1d02fc649966 : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_bb0f0a9322c5911438bb794513b1730c_7055187111608814719);
        public override string CoherenceComponentName => "_bb0f0a9322c5911438bb794513b1730c_7055187111608814719";
        public override uint FieldMask => 0b00000000000000000000000000000010;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Horizontal_32_Input;

            var simFrame = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Horizontal_32_InputSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Horizontal_32_Input = Value;
            }
            else
            {
                update.Horizontal_32_Input = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.Horizontal_32_InputSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _bb0f0a9322c5911438bb794513b1730c_7055187111608814719();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_bb0f0a9322c5911438bb794513b1730c_c77cdc0bc4b04fbfb43d059a2760f7ee : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_bb0f0a9322c5911438bb794513b1730c_7055187111608814719);
        public override string CoherenceComponentName => "_bb0f0a9322c5911438bb794513b1730c_7055187111608814719";
        public override uint FieldMask => 0b00000000000000000000000000000100;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Yaw_32_Input;

            var simFrame = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Yaw_32_InputSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Yaw_32_Input = Value;
            }
            else
            {
                update.Yaw_32_Input = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.Yaw_32_InputSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _bb0f0a9322c5911438bb794513b1730c_7055187111608814719();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_bb0f0a9322c5911438bb794513b1730c_c9103cbf9d7b47ac80f5f9c7181dc8c6 : IntAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_bb0f0a9322c5911438bb794513b1730c_7055187111608814719);
        public override string CoherenceComponentName => "_bb0f0a9322c5911438bb794513b1730c_7055187111608814719";
        public override uint FieldMask => 0b00000000000000000000000000001000;

        public override System.Int32 Value
        {
            get { return (System.Int32)(CastedUnityComponent.GetInteger(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetInteger(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Int32 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Int_32_Value;

            var simFrame = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Int_32_ValueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Int_32_Value = Value;
            }
            else
            {
                update.Int_32_Value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.Int_32_ValueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _bb0f0a9322c5911438bb794513b1730c_7055187111608814719();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_bb0f0a9322c5911438bb794513b1730c_574525745f9f4b72bb1020e7b57ec114 : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_bb0f0a9322c5911438bb794513b1730c_7055187111608814719);
        public override string CoherenceComponentName => "_bb0f0a9322c5911438bb794513b1730c_7055187111608814719";
        public override uint FieldMask => 0b00000000000000000000000000010000;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Float_32_Value;

            var simFrame = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Float_32_ValueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Float_32_Value = Value;
            }
            else
            {
                update.Float_32_Value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.Float_32_ValueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _bb0f0a9322c5911438bb794513b1730c_7055187111608814719();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_bb0f0a9322c5911438bb794513b1730c_1e677f00cd6148d185fd4740c939b99f : BoolAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_bb0f0a9322c5911438bb794513b1730c_7055187111608814719);
        public override string CoherenceComponentName => "_bb0f0a9322c5911438bb794513b1730c_7055187111608814719";
        public override uint FieldMask => 0b00000000000000000000000000100000;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.GetBool(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetBool(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Bool_32_Value;

            var simFrame = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Bool_32_ValueSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Bool_32_Value = Value;
            }
            else
            {
                update.Bool_32_Value = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.Bool_32_ValueSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _bb0f0a9322c5911438bb794513b1730c_7055187111608814719();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_bb0f0a9322c5911438bb794513b1730c_28634f75be3a4e74b65ebf807739439b : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_bb0f0a9322c5911438bb794513b1730c_7055187111608814719);
        public override string CoherenceComponentName => "_bb0f0a9322c5911438bb794513b1730c_7055187111608814719";
        public override uint FieldMask => 0b00000000000000000000000001000000;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Force;

            var simFrame = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).ForceSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Force = Value;
            }
            else
            {
                update.Force = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.ForceSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _bb0f0a9322c5911438bb794513b1730c_7055187111608814719();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_bb0f0a9322c5911438bb794513b1730c_8e029071de60455c96aa1db04e408d8e : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_bb0f0a9322c5911438bb794513b1730c_7055187111608814719);
        public override string CoherenceComponentName => "_bb0f0a9322c5911438bb794513b1730c_7055187111608814719";
        public override uint FieldMask => 0b00000000000000000000000010000000;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Leg;

            var simFrame = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).LegSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Leg = Value;
            }
            else
            {
                update.Leg = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.LegSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _bb0f0a9322c5911438bb794513b1730c_7055187111608814719();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_bb0f0a9322c5911438bb794513b1730c_aff807953b7740a484fd5a12026c894c : IntAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_bb0f0a9322c5911438bb794513b1730c_7055187111608814719);
        public override string CoherenceComponentName => "_bb0f0a9322c5911438bb794513b1730c_7055187111608814719";
        public override uint FieldMask => 0b00000000000000000000000100000000;

        public override System.Int32 Value
        {
            get { return (System.Int32)(CastedUnityComponent.GetInteger(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetInteger(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Int32 value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Item_32_ID;

            var simFrame = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Item_32_IDSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Item_32_ID = Value;
            }
            else
            {
                update.Item_32_ID = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.Item_32_IDSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _bb0f0a9322c5911438bb794513b1730c_7055187111608814719();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_bb0f0a9322c5911438bb794513b1730c_d4a4dc9a1a7b4d7f8f334102803dd491 : BoolAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_bb0f0a9322c5911438bb794513b1730c_7055187111608814719);
        public override string CoherenceComponentName => "_bb0f0a9322c5911438bb794513b1730c_7055187111608814719";
        public override uint FieldMask => 0b00000000000000000000001000000000;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.GetBool(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetBool(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Moving;

            var simFrame = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).MovingSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Moving = Value;
            }
            else
            {
                update.Moving = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.MovingSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _bb0f0a9322c5911438bb794513b1730c_7055187111608814719();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_bb0f0a9322c5911438bb794513b1730c_6b916f41ec4c424ba1a4a77c77da7587 : BoolAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_bb0f0a9322c5911438bb794513b1730c_7055187111608814719);
        public override string CoherenceComponentName => "_bb0f0a9322c5911438bb794513b1730c_7055187111608814719";
        public override uint FieldMask => 0b00000000000000000000010000000000;

        public override System.Boolean Value
        {
            get { return (System.Boolean)(CastedUnityComponent.GetBool(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetBool(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Boolean value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Item_32_Use;

            var simFrame = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Item_32_UseSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Item_32_Use = Value;
            }
            else
            {
                update.Item_32_Use = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.Item_32_UseSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _bb0f0a9322c5911438bb794513b1730c_7055187111608814719();
        }    
    }
    [UnityEngine.Scripting.Preserve]
    public class Binding_bb0f0a9322c5911438bb794513b1730c_5eda4a2a7a144917b58df8fb9d10af26 : FloatAnimatorParameterBinding
    {   
        private global::UnityEngine.Animator CastedUnityComponent;

        protected override void OnBindingCloned()
        {
    	    CastedUnityComponent = (global::UnityEngine.Animator)UnityComponent;
        }

        public override global::System.Type CoherenceComponentType => typeof(_bb0f0a9322c5911438bb794513b1730c_7055187111608814719);
        public override string CoherenceComponentName => "_bb0f0a9322c5911438bb794513b1730c_7055187111608814719";
        public override uint FieldMask => 0b00000000000000000000100000000000;

        public override System.Single Value
        {
            get { return (System.Single)(CastedUnityComponent.GetFloat(CastedDescriptor.ParameterHash)); }
            set { CastedUnityComponent.SetFloat(CastedDescriptor.ParameterHash, value); }
        }

        protected override (System.Single value, AbsoluteSimulationFrame simFrame) ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
        {
            var value = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Speed_32_Multiplier;

            var simFrame = ((_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent).Speed_32_MultiplierSimulationFrame;
            
            return (value, simFrame);
        }

        public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent, AbsoluteSimulationFrame simFrame)
        {
            var update = (_bb0f0a9322c5911438bb794513b1730c_7055187111608814719)coherenceComponent;
            if (Interpolator.IsInterpolationNone)
            {
                update.Speed_32_Multiplier = Value;
            }
            else
            {
                update.Speed_32_Multiplier = GetInterpolatedAt(simFrame / InterpolationSettings.SimulationFramesPerSecond);
            }

            update.Speed_32_MultiplierSimulationFrame = simFrame;
            
            return update;
        }

        public override ICoherenceComponentData CreateComponentData()
        {
            return new _bb0f0a9322c5911438bb794513b1730c_7055187111608814719();
        }    
    }

    [UnityEngine.Scripting.Preserve]
    public class CoherenceSync_bb0f0a9322c5911438bb794513b1730c : CoherenceSyncBaked
    {
        private Entity entityId;
        private Logger logger = Coherence.Log.Log.GetLogger<CoherenceSync_bb0f0a9322c5911438bb794513b1730c>();
        
        
        
        private IClient client;
        private CoherenceBridge bridge;
        
        private readonly Dictionary<string, Binding> bakedValueBindings = new Dictionary<string, Binding>()
        {
			["9049011257ea420fa596e3a4dc5c42ab"] = new Binding_bb0f0a9322c5911438bb794513b1730c_9049011257ea420fa596e3a4dc5c42ab(),
			["e2143d6c3c06415fb0520c21e6e4be49"] = new Binding_bb0f0a9322c5911438bb794513b1730c_e2143d6c3c06415fb0520c21e6e4be49(),
			["4e514bd9005c473487059372b23c7e12"] = new Binding_bb0f0a9322c5911438bb794513b1730c_4e514bd9005c473487059372b23c7e12(),
			["995efbc669664abc97e5b763c203a807"] = new Binding_bb0f0a9322c5911438bb794513b1730c_995efbc669664abc97e5b763c203a807(),
			["0971e12432ec40d9b41b1d02fc649966"] = new Binding_bb0f0a9322c5911438bb794513b1730c_0971e12432ec40d9b41b1d02fc649966(),
			["c77cdc0bc4b04fbfb43d059a2760f7ee"] = new Binding_bb0f0a9322c5911438bb794513b1730c_c77cdc0bc4b04fbfb43d059a2760f7ee(),
			["c9103cbf9d7b47ac80f5f9c7181dc8c6"] = new Binding_bb0f0a9322c5911438bb794513b1730c_c9103cbf9d7b47ac80f5f9c7181dc8c6(),
			["574525745f9f4b72bb1020e7b57ec114"] = new Binding_bb0f0a9322c5911438bb794513b1730c_574525745f9f4b72bb1020e7b57ec114(),
			["1e677f00cd6148d185fd4740c939b99f"] = new Binding_bb0f0a9322c5911438bb794513b1730c_1e677f00cd6148d185fd4740c939b99f(),
			["28634f75be3a4e74b65ebf807739439b"] = new Binding_bb0f0a9322c5911438bb794513b1730c_28634f75be3a4e74b65ebf807739439b(),
			["8e029071de60455c96aa1db04e408d8e"] = new Binding_bb0f0a9322c5911438bb794513b1730c_8e029071de60455c96aa1db04e408d8e(),
			["aff807953b7740a484fd5a12026c894c"] = new Binding_bb0f0a9322c5911438bb794513b1730c_aff807953b7740a484fd5a12026c894c(),
			["d4a4dc9a1a7b4d7f8f334102803dd491"] = new Binding_bb0f0a9322c5911438bb794513b1730c_d4a4dc9a1a7b4d7f8f334102803dd491(),
			["6b916f41ec4c424ba1a4a77c77da7587"] = new Binding_bb0f0a9322c5911438bb794513b1730c_6b916f41ec4c424ba1a4a77c77da7587(),
			["5eda4a2a7a144917b58df8fb9d10af26"] = new Binding_bb0f0a9322c5911438bb794513b1730c_5eda4a2a7a144917b58df8fb9d10af26(),
        };
        
        private Dictionary<string, Action<CommandBinding, CommandsHandler>> bakedCommandBindings = new Dictionary<string, Action<CommandBinding, CommandsHandler>>();
        
        public CoherenceSync_bb0f0a9322c5911438bb794513b1730c()
        {
        }
        
        public override Binding BakeValueBinding(Binding valueBinding)
        {
            if (bakedValueBindings.TryGetValue(valueBinding.guid, out var bakedBinding))
            {
                valueBinding.CloneTo(bakedBinding);
                return bakedBinding;
            }
            
            return null;
        }
        
        public override void BakeCommandBinding(CommandBinding commandBinding, CommandsHandler commandsHandler)
        {
            if (bakedCommandBindings.TryGetValue(commandBinding.guid, out var commandBindingBaker))
            {
                commandBindingBaker.Invoke(commandBinding, commandsHandler);
            }
        }
        
        public override void ReceiveCommand(IEntityCommand command)
        {
            switch (command)
            {
                default:
                    logger.Warning(Coherence.Log.Warning.ToolkitBakedSyncReceiveCommandUnhandled,
                        $"CoherenceSync_bb0f0a9322c5911438bb794513b1730c Unhandled command: {command.GetType()}.");
                    break;
            }
        }
        
        public override void CreateEntity(bool usesLodsAtRuntime, string archetypeName, AbsoluteSimulationFrame simFrame, List<ICoherenceComponentData> components)
        {

            if (!usesLodsAtRuntime)
            {
                return;
            }
            
            if (Archetypes.IndexForName.TryGetValue(archetypeName, out int archetypeIndex))
            {
                components.Add(new ArchetypeComponent
                    {
                        index = archetypeIndex,
                        indexSimulationFrame = simFrame,
                        FieldsMask = 0b1
                    }
                );

                return;                
            }
    
            logger.Warning(Coherence.Log.Warning.ToolkitBakedSyncCreateEntityMissingArchetype,
                $"Unable to find archetype {archetypeName} in dictionary. Please, bake manually (coherence > Bake)");
        }
        
        public override void Dispose()
        {
        }
        
        public override void Initialize(Entity entityId, CoherenceBridge bridge, IClient client, CoherenceInput input, Logger logger)
        {
            this.logger = logger.With<CoherenceSync_bb0f0a9322c5911438bb794513b1730c>();
            this.bridge = bridge;
            this.entityId = entityId;
            this.client = client;        
        }
    }
}
